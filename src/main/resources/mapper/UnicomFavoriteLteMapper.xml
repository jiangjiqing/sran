<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hongshen.sran_service.dao.UnicomFavoriteLteMapper">
  <resultMap id="BaseResultMap" type="com.hongshen.sran_service.entity.UnicomFavoriteLte">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="list" jdbcType="VARCHAR" property="list" />
  </resultMap>
  <insert id="insert" parameterType="com.hongshen.sran_service.entity.UnicomFavoriteLte">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into unicom_favorite_lte (login_name, list)
    values (#{loginName,jdbcType=VARCHAR}, #{list,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hongshen.sran_service.entity.UnicomFavoriteLte">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into unicom_favorite_lte
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        login_name,
      </if>
      <if test="list != null">
        list,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="list != null">
        #{list,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="getFavoriteList" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
    SELECT
      a.node_name nodeName,
      b.group_name groupName,
      b.latitude latitude,
      b.station_name stationName,
      b.longitude longitude
    FROM ${TableName} a
      LEFT JOIN unicom_node_lte b ON a.node_name = b.node_name
    -- LEFT JOIN unicom_quota_history_node_wcdma c ON b.node_name = c.`name` ORDER BY NOW() LIMIT 1
  </select>

  <delete id="cancelCollection" parameterType="java.lang.String">
    DELETE FROM unicom_favorite_lte
    WHERE unicom_favorite_lte.list = #{name}
  </delete>

  <insert id="addCollection" parameterType="java.lang.String">
    INSERT INTO unicom_favorite_lte (list)
    VALUES (#{name})
  </insert>

  <select id="getTable" parameterType="java.lang.String" resultType="com.alibaba.fastjson.JSONObject">
    SHOW TABLES LIKE #{tableNameLike}
  </select>

  <select id="getNodes" resultType="com.alibaba.fastjson.JSONObject" parameterType="java.lang.String">
    SELECT
    a.node_name
    FROM ${tableName} a
    LEFT JOIN  unicom_node_lte b
    ON a.node_name = b.node_name
    WHERE b.group_name = #{name}
  </select>

  <delete id="deleteNode" parameterType="java.lang.String">
    DELETE FROM ${tableName} WHERE node_name = #{name}
  </delete>

  <delete id="deleteNodes" parameterType="java.lang.String">
    DELETE FROM ${tableName} WHERE node_name IN (
    SELECT node_name FROM unicom_node_lte
    WHERE group_name=#{name}
    )
  </delete>

  <insert id="addNode" parameterType="java.lang.String">
    REPLACE INTO ${tableName} (node_name) VALUES (#{name})
  </insert>

  <insert id="addNodes" parameterType="java.util.List">
    REPLACE INTO ${tableName} (node_name)
    values
    <foreach collection="nodeNames" index="index" item="node" separator=",">
      (#{node.name})
    </foreach>
  </insert>

  <select id="getNodeNum" parameterType="java.lang.String" resultType="java.lang.Integer">
  SELECT count(*) from
   ${tableName} u
    LEFT JOIN
    unicom_node_lte l
    on
    u.node_name = l.node_name
    WHERE
    l.group_name = #{groupName}
  </select>

  <select id="getNodeofNull" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT count(*) from
    ${tableName}
     WHERE
    node_name = #{nodeName}
  </select>

  <update id="createTable" parameterType="java.lang.String">
    CREATE TABLE ${tableName} (
    node_name VARCHAR(255)
    )
  </update>

  <insert id="addFavoriteFile" parameterType="java.util.List">
    INSERT IGNORE into ${tableName} (node_name)
    values
    <foreach collection="paramList" index="index" item="node" separator=",">
      (#{node})
    </foreach>
  </insert>

</mapper>